{
  "swagger": "2.0",
  "info": {
    "description": "Mastercity API",
    "version": "1.0.0",
    "title": "Mastercity API"
  },
  "host": "url_heroku",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Operations about Authentication"
    },
    {
      "name": "user",
      "description": "Operations about User"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/sign-in": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create user",
        "description": "This option has no route protection.",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean"
                },
                "status": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "error": false,
                "status": 201,
                "message": "User created",
                "body": ""
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user Id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "boolean"
                },
                "status": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "error": false,
                "status": 200,
                "message": "User retrieved",
                "body": {
                  "firstName": "string",
                  "lastName": "string",
                  "email": "string",
                  "password": "string",
                  "profileType": "string",
                  "_id": "string",
                  "isDisable": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "profileType"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "profileType": {
          "type": "string",
          "enum": [
            "admin",
            "offerer",
            "applicant"
          ]
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}